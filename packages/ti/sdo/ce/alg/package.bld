/* 
 * Copyright (c) 2012, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */

/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

/* lib/ is a generated directory that 'xdc clean' should remove */
Pkg.generatedFiles.$add("lib/");

/*
 * This package distributes its sources in the default release.  This is to
 * enable better understanding by the customer/field, as well as enable
 * modification and profiling techniques in the field.
 */
Pkg.attrs.exportSrc = true;

var ALG_SRCS = ["alg_control.c", "alg_create.c", "alg_malloc.c"];

var ALGORITHM_GNU_SRCS = ["Algorithm_noOS.c"];
var ALGORITHM_BIOS_SRCS = ["Algorithm_BIOS.c"];

var otherFiles = ["alg.h", "Algorithm.h", "_alg.h", "package.bld",
        "_Algorithm.h",
        "simple_GCArmv5T.mak"
        ];

// Source only release needs all source files to be in Pkg.otherFiles
srcs = ALG_SRCS.concat(ALGORITHM_BIOS_SRCS).concat(ALGORITHM_GNU_SRCS);
Pkg.otherFiles = otherFiles.concat(srcs);

for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];

    /* Build for all profiles */
    for (var profile in targ.profiles) {

        if (targ.os == undefined) {
            /* Assume BIOS-based target */
            Pkg.addLibrary("lib/" + profile + "/Algorithm_BIOS", targ, {
                profile: profile
            }).addObjects(ALGORITHM_BIOS_SRCS);
        } else {
            Pkg.addLibrary("lib/" + profile + "/Algorithm_noOS", targ, {
                profile: profile
            }).addObjects(ALGORITHM_GNU_SRCS);

            Pkg.addLibrary("lib/" + profile + "/alg", targ, {
                profile: profile
            }).addObjects(ALG_SRCS);
        }
    }
}
/*
 *  @(#) ti.sdo.ce.alg; 1, 0, 1,1; 2-24-2012 19:27:09; /db/atree/library/trees/ce/ce-t06/src/ xlibrary

 */

