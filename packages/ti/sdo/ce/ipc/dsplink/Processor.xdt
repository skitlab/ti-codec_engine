%%{
/* 
 * Copyright (c) 2012, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
%%}
% var processor = this;
% var ipc = xdc.module('ti.sdo.ce.ipc.dsplink.Ipc');

#include <ti/sdo/ce/ipc/Processor.h>

Int16 ti_sdo_ce_ipc_dsplink__Processor_defaultSharedRegionId = `this.sharedRegionId`;
Int16 ti_sdo_ce_ipc_dsplink__Processor_defaultHeapId = `this.heapId`;
Int32 ti_sdo_ce_ipc_dsplink__Processor_defaultNumMsgs = `ipc.armCommNumMsgs`;
Int32 ti_sdo_ce_ipc_dsplink__Processor_defaultMsgSize = `ipc.armCommMsgSize`;

Bool ti_sdo_ce_ipc_dsplink__Processor_loadSlave = `this.loadSlave ? "TRUE" : "FALSE"`;

Processor_CommDesc ti_sdo_ce_ipc_dsplink__Processor_commDescs[] = {
% var numCommDescs;
% var coreComm = this.coreComm;
% if (coreComm.length == 0) {
%     numCommDescs = 1;
    {
	-1,			/* numMsgs */
	-1,			/* msgSize */
	-1,			/* sharedRegionId */
	-1,			/* heapId */
	FALSE,			/* userCreatedHeap */
    }
% }
% else {
%     numCommDescs = coreComm.length;
%     for (var i = 0; i < numCommDescs; i++) {
    {
	`this.coreComm[i].numMsgs == undefined ? -1 : this.coreComm[i].numMsgs`,	/* numMsgs */
        `this.coreComm[i].msgSize == undefined ? -1 : this.coreComm[i].msgSize`,	/* msgSize */
        `this.coreComm[i].sharedRegionId == undefined ? -1 : this.coreComm[i].sharedRegionId`,	/* sharedRegionId */
        `this.coreComm[i].heapId == undefined ? -1 : this.coreComm[i].heapId`,	/* heapId */
%         if (this.coreComm[i].userCreatedHeap == undefined) {
        FALSE	/* userCreateHeap */
%         } else if (this.coreComm[i].userCreatedHeap) {
        TRUE	/* userCreateHeap */
%         } else {
        FALSE	/* userCreateHeap */
%         }
    },
%     }
% }
};

UInt32 ti_sdo_ce_ipc_dsplink__Processor_numCommDescs = `numCommDescs`;

%%{
/*
 * @(#) ti.sdo.ce.ipc.dsplink; 2, 0, 1,1; 2-24-2012 19:30:03; /db/atree/library/trees/ce/ce-t06/src/ xlibrary

 */

%%}
