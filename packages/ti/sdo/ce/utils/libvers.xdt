%%{
/* 
 * Copyright (c) 2012, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * */
%%}
%%{
    /*
     *  ======== libvers.xdt ========
     *  Generate version information for each library
     *
     *  This template expands to a file (package/package.bld.c) which is
     *  included by package/package.c.  The generated file is compiled and
     *  archived into every library produced by packages that set
     *  xdc.bld.PackageContents.libTemplate to reference this template.
     *
     *  This template defines three global variables:
     *      <pkg_prefix>_versionString
     *      <pkg_prefix>_versionNumArray
     *      <pkg_prefix>_whatString
     *
     *  where <pkg_prefix> is the package prefix used to keep all package
     *  names globally unique; e.g., the prefix for the package named foo.bar
     *  is "foo_bar_".
     */

    /*
     * detect whether this package is an example - if it is, we don't bury these
     * version strings in the binaries.
     */
    var packagename = Pkg.name;
    var isExample = (packagename.match(/\.examples[|\.]/) != null);
//    print("packagename:  " + packagename + "\nisExample:  " + isExample);

    var base = xdc.getPackageBase(Pkg.name);
    base = base.substr(0, base.length - (Pkg.name.length + 1));

    var version = Pkg.version;
    if (version == "") {
        version = "0, 0, 0";
    }

%%}
%   if (!isExample) {
#define _concat(p,n) p ## n
#define myPrefixedVar(p,n) _concat(p,n)

/* create a string that can be used at runtime */
char * myPrefixedVar(__xdc_PKGPREFIX, _versionString) = "`version`";

/* create numeric array that can be used at runtime */
float myPrefixedVar(__xdc_PKGPREFIX, _versionNumArray)[] = {`version`};
%    }
%%{
/*
 * @(#) ti.sdo.ce.utils; 1, 0, 0,1; 2-24-2012 19:31:35; /db/atree/library/trees/ce/ce-t06/src/ xlibrary

 */

%%}
